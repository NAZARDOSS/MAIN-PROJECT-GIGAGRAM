{"ast":null,"code":"var _jsxFileName = \"/Users/nazardosmukhambetov/Desktop/MAIN-PROJECT-GIGAGRAM-main/src/pages/partial/modal/ModalWindow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport TextField from '@mui/material/TextField';\nimport modalStyle from \"./modal.scss\";\nimport { observer } from \"mobx-react\";\nimport { useStores } from \"../../../stores/MainStore\";\nimport Success from \"../Success\";\nimport ChildModal from \"./ChildModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ModalWindow = observer(_c = _s(() => {\n  _s();\n  const {\n    RequestsStore,\n    ConfigStore\n  } = useStores();\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [newDescription, setNewDescription] = useState(\"\");\n  const [newImg, setNewImg] = useState(\"\");\n  const [newVideo, setNewVideo] = useState(\"\");\n  const [reqMedia, setReqMedia] = useState(\"\");\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onChange\"\n  });\n  function handleClose() {\n    ConfigStore.setIsShowModalWindow(false);\n  }\n  const onSubmit = async data => {\n    if (!data.image && !data.video) {\n      return setReqMedia(\"Image or Video Field is required\");\n    }\n    const resp = RequestsStore.doPost(ConfigStore.url + \"/post\", {\n      title: data.title,\n      description: data.description,\n      image: data.image,\n      video: data.video,\n      status: \"active\"\n    }).then(() => {\n      handleClose();\n      ConfigStore.setUpdatePosts(true);\n      ConfigStore.setSnackSeverity(\"success\");\n      ConfigStore.setSnackText(\"Posted successfuly!\");\n      ConfigStore.setIsShowSnack(true);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      className: \"modals\",\n      show: ConfigStore.isShowModalWindow,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(data => onSubmit(data)),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            type: \"text\",\n            id: \"outlined-normal\",\n            label: \"Title\",\n            fullWidth: true,\n            size: \"small\",\n            ...register(\"title\", {\n              required: \"The field is required\",\n              value: newTitle,\n              onChange: e => {\n                setNewTitle(e.target.value);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"validError\",\n            children: errors.title && errors.title.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"text\",\n            id: \"outlined-normal\",\n            label: \"Description\",\n            fullWidth: true,\n            size: \"small\",\n            ...register(\"description\", {\n              required: \"The field is required\",\n              value: newDescription,\n              onChange: e => {\n                setNewDescription(e.target.value);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"validError\",\n            children: errors.description && errors.description.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"url\",\n            id: \"outlined-normal\",\n            label: \"Image\",\n            fullWidth: true,\n            size: \"small\",\n            ...register(\"image\", {\n              value: newImg,\n              onChange: e => {\n                setNewImg(e.target.value);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"validError\",\n            children: reqMedia\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"url\",\n            id: \"outlined-normal\",\n            label: \"Video\",\n            fullWidth: true,\n            size: \"small\",\n            ...register(\"video\", {\n              value: newVideo,\n              onChange: e => {\n                setNewVideo(e.target.value);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"validError\",\n            children: reqMedia\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(ChildModal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            className: \"edit-btn\",\n            type: \"submit\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Success, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}, \"w7kSKw/kQIqc/jAjdwepKVOA+LI=\", false, function () {\n  return [useStores, useForm];\n}));\n_c2 = ModalWindow;\nexport default ModalWindow;\nvar _c, _c2;\n$RefreshReg$(_c, \"ModalWindow$observer\");\n$RefreshReg$(_c2, \"ModalWindow\");","map":{"version":3,"names":["React","useState","useForm","Modal","Button","TextField","modalStyle","observer","useStores","Success","ChildModal","jsxDEV","_jsxDEV","Fragment","_Fragment","ModalWindow","_c","_s","RequestsStore","ConfigStore","newTitle","setNewTitle","newDescription","setNewDescription","newImg","setNewImg","newVideo","setNewVideo","reqMedia","setReqMedia","register","handleSubmit","formState","errors","mode","handleClose","setIsShowModalWindow","onSubmit","data","image","video","resp","doPost","url","title","description","status","then","setUpdatePosts","setSnackSeverity","setSnackText","setIsShowSnack","children","className","show","isShowModalWindow","onHide","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","type","id","label","fullWidth","size","required","value","onChange","e","target","message","Footer","style","display","justifyContent","variant","_c2","$RefreshReg$"],"sources":["/Users/nazardosmukhambetov/Desktop/MAIN-PROJECT-GIGAGRAM-main/src/pages/partial/modal/ModalWindow.jsx"],"sourcesContent":["import React, { useState }      from \"react\";\nimport { useForm }              from \"react-hook-form\";\nimport { Modal, Button }        from \"react-bootstrap\";\nimport TextField                from '@mui/material/TextField';\nimport modalStyle               from \"./modal.scss\";\nimport { observer }             from \"mobx-react\";\nimport { useStores }            from \"../../../stores/MainStore\";\nimport Success                  from \"../Success\";\nimport ChildModal               from \"./ChildModal\";\n\nconst ModalWindow = observer(() => {\n\n  const { RequestsStore, ConfigStore } = useStores();\n\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [newDescription, setNewDescription] = useState(\"\");\n  const [newImg, setNewImg] = useState(\"\");\n  const [newVideo, setNewVideo] = useState(\"\");\n  const [reqMedia, setReqMedia] = useState(\"\");\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ mode: \"onChange\" });\n\n  function handleClose() {\n    ConfigStore.setIsShowModalWindow(false);\n  }\n\n  const onSubmit = async (data) => {\n    if (!data.image && !data.video) {\n      return setReqMedia(\"Image or Video Field is required\");\n    }\n\n    const resp = RequestsStore.doPost(ConfigStore.url + \"/post\", {\n        title: data.title,\n        description: data.description,\n        image: data.image,\n        video: data.video,\n        status: \"active\"\n    })\n    .then(() => {\n      handleClose();\n      ConfigStore.setUpdatePosts(true);\n      ConfigStore.setSnackSeverity(\"success\");\n      ConfigStore.setSnackText(\"Posted successfuly!\");\n      ConfigStore.setIsShowSnack(true);\n    })\n  };\n\n  return (\n    <>\n      <Modal className=\"modals\" show={ConfigStore.isShowModalWindow} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add post</Modal.Title>\n        </Modal.Header>\n        <form onSubmit={handleSubmit((data) => onSubmit(data))}>\n          <Modal.Body>\n            <TextField\n              type=\"text\"\n              id=\"outlined-normal\"\n              label=\"Title\"\n              fullWidth\n              size=\"small\"\n              {...register(\"title\", {\n                required: \"The field is required\",\n                value: newTitle,\n                onChange: (e) => {\n                  setNewTitle(e.target.value);\n                },\n              })}\n            />\n            <p className=\"validError\">{errors.title && errors.title.message}</p>\n            <TextField\n              type=\"text\"\n              id=\"outlined-normal\"\n              label=\"Description\"\n              fullWidth\n              size=\"small\"\n              {...register(\"description\", {\n                required: \"The field is required\",\n                value: newDescription,\n                onChange: (e) => {\n                  setNewDescription(e.target.value);\n                },\n              })}\n            />\n            <p className=\"validError\">{errors.description && errors.description.message}</p>\n            <TextField\n              type=\"url\"\n              id=\"outlined-normal\"\n              label=\"Image\"\n              fullWidth\n              size=\"small\"\n              {...register(\"image\", {\n                value: newImg,\n                onChange: (e) => {\n                  setNewImg(e.target.value);\n                },\n              })}\n            />\n            <p className=\"validError\">{reqMedia}</p>\n            <TextField\n              type=\"url\"\n              id=\"outlined-normal\"\n              label=\"Video\"\n              fullWidth\n              size=\"small\"\n              {...register(\"video\", {\n                value: newVideo,\n                onChange: (e) => {\n                  setNewVideo(e.target.value);\n                },\n              })}\n            />\n            <p className=\"validError\">{reqMedia}</p>\n          </Modal.Body>\n          <Modal.Footer style={{\n            display: \"flex\",\n            justifyContent: \"space-between\"\n          }}>\n            <ChildModal />\n            <Button variant=\"secondary\" className=\"edit-btn\" type=\"submit\">\n              Add\n            </Button>\n          </Modal.Footer>\n        </form>\n      </Modal>\n      <Success />\n    </>\n  );\n});\n\nexport default ModalWindow;"],"mappings":"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"},"metadata":{},"sourceType":"module"}