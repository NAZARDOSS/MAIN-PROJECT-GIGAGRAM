{"ast":null,"code":"import * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useThemeProps } from '../styles';\nimport styled from '../styles/styled';\nimport { getAvatarGroupUtilityClass } from './avatarGroupClasses';\nimport useSlot from '../utils/useSlot';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const AvatarGroupContext = /*#__PURE__*/React.createContext(undefined);\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getAvatarGroupUtilityClass, {});\n};\nconst AvatarGroupGroupRoot = styled('div', {\n  name: 'JoyAvatarGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(_ref => {\n  let {\n    ownerState,\n    theme\n  } = _ref;\n  return {\n    ...(ownerState.size === 'sm' && {\n      '--AvatarGroup-gap': '-0.375rem',\n      '--Avatar-ringSize': '2px'\n    }),\n    ...(ownerState.size === 'md' && {\n      '--AvatarGroup-gap': '-0.5rem',\n      '--Avatar-ringSize': '2px'\n    }),\n    ...(ownerState.size === 'lg' && {\n      '--AvatarGroup-gap': '-0.625rem',\n      '--Avatar-ringSize': '4px'\n    }),\n    '--Avatar-ring': `0 0 0 var(--Avatar-ringSize) var(--Avatar-ringColor, ${theme.vars.palette.background.surface})`,\n    '--Avatar-marginInlineStart': 'var(--AvatarGroup-gap)',\n    display: 'flex',\n    marginInlineStart: 'calc(-1 * var(--AvatarGroup-gap))'\n  };\n});\n\n/**\n *\n * Demos:\n *\n * - [Avatar](https://mui.com/joy-ui/react-avatar/)\n *\n * API:\n *\n * - [AvatarGroup API](https://mui.com/joy-ui/api/avatar-group/)\n */\nconst AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyAvatarGroup'\n  });\n  const {\n    className,\n    color,\n    component = 'div',\n    size = 'md',\n    variant,\n    children,\n    slots = {},\n    slotProps = {},\n    ...other\n  } = props;\n  const ownerState = React.useMemo(() => ({\n    ...props,\n    color,\n    component,\n    size,\n    variant\n  }), [color, component, props, size, variant]);\n  const classes = useUtilityClasses();\n  const [SlotRoot, rootProps] = useSlot('root', {\n    ref,\n    className: clsx(classes.root, className),\n    elementType: AvatarGroupGroupRoot,\n    externalForwardedProps: {\n      ...other,\n      component,\n      slots,\n      slotProps\n    },\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(AvatarGroupContext.Provider, {\n    value: ownerState,\n    children: /*#__PURE__*/_jsx(SlotRoot, {\n      ...rootProps,\n      children: children\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Used to render icon or text elements inside the AvatarGroup if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['danger', 'info', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The size of the component.\n   * It accepts theme values between 'sm' and 'lg'.\n   * @default 'md'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['lg', 'md', 'sm']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The [global variant](https://mui.com/joy-ui/main-features/global-variants/) to use.\n   * @default 'soft'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default AvatarGroup;","map":{"version":3,"names":["React","clsx","PropTypes","unstable_composeClasses","composeClasses","useThemeProps","styled","getAvatarGroupUtilityClass","useSlot","jsx","_jsx","AvatarGroupContext","createContext","undefined","useUtilityClasses","slots","root","AvatarGroupGroupRoot","name","slot","overridesResolver","props","styles","_ref","ownerState","theme","size","vars","palette","background","surface","display","marginInlineStart","AvatarGroup","forwardRef","inProps","ref","className","color","component","variant","children","slotProps","other","useMemo","classes","SlotRoot","rootProps","elementType","externalForwardedProps","Provider","value","process","env","NODE_ENV","propTypes","node","string","oneOfType","oneOf","shape","func","object","sx","arrayOf","bool"],"sources":["/Users/nazardosmukhambetov/Desktop/GIT/GIGA/node_modules/@mui/joy/AvatarGroup/AvatarGroup.js"],"sourcesContent":["import * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useThemeProps } from '../styles';\nimport styled from '../styles/styled';\nimport { getAvatarGroupUtilityClass } from './avatarGroupClasses';\nimport useSlot from '../utils/useSlot';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const AvatarGroupContext = /*#__PURE__*/React.createContext(undefined);\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getAvatarGroupUtilityClass, {});\n};\nconst AvatarGroupGroupRoot = styled('div', {\n  name: 'JoyAvatarGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  ownerState,\n  theme\n}) => ({\n  ...(ownerState.size === 'sm' && {\n    '--AvatarGroup-gap': '-0.375rem',\n    '--Avatar-ringSize': '2px'\n  }),\n  ...(ownerState.size === 'md' && {\n    '--AvatarGroup-gap': '-0.5rem',\n    '--Avatar-ringSize': '2px'\n  }),\n  ...(ownerState.size === 'lg' && {\n    '--AvatarGroup-gap': '-0.625rem',\n    '--Avatar-ringSize': '4px'\n  }),\n  '--Avatar-ring': `0 0 0 var(--Avatar-ringSize) var(--Avatar-ringColor, ${theme.vars.palette.background.surface})`,\n  '--Avatar-marginInlineStart': 'var(--AvatarGroup-gap)',\n  display: 'flex',\n  marginInlineStart: 'calc(-1 * var(--AvatarGroup-gap))'\n}));\n\n/**\n *\n * Demos:\n *\n * - [Avatar](https://mui.com/joy-ui/react-avatar/)\n *\n * API:\n *\n * - [AvatarGroup API](https://mui.com/joy-ui/api/avatar-group/)\n */\nconst AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyAvatarGroup'\n  });\n  const {\n    className,\n    color,\n    component = 'div',\n    size = 'md',\n    variant,\n    children,\n    slots = {},\n    slotProps = {},\n    ...other\n  } = props;\n  const ownerState = React.useMemo(() => ({\n    ...props,\n    color,\n    component,\n    size,\n    variant\n  }), [color, component, props, size, variant]);\n  const classes = useUtilityClasses();\n  const [SlotRoot, rootProps] = useSlot('root', {\n    ref,\n    className: clsx(classes.root, className),\n    elementType: AvatarGroupGroupRoot,\n    externalForwardedProps: {\n      ...other,\n      component,\n      slots,\n      slotProps\n    },\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(AvatarGroupContext.Provider, {\n    value: ownerState,\n    children: /*#__PURE__*/_jsx(SlotRoot, {\n      ...rootProps,\n      children: children\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Used to render icon or text elements inside the AvatarGroup if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['danger', 'info', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The size of the component.\n   * It accepts theme values between 'sm' and 'lg'.\n   * @default 'md'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['lg', 'md', 'sm']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The [global variant](https://mui.com/joy-ui/main-features/global-variants/) to use.\n   * @default 'soft'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default AvatarGroup;"],"mappings":"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"},"metadata":{},"sourceType":"module"}