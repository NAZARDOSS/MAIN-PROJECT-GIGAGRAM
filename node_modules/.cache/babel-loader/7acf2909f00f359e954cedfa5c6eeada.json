{"ast":null,"code":"var _jsxFileName = \"/Users/nazardosmukhambetov/Desktop/MAIN-PROJECT-GIGAGRAM-main/src/pages/partial/Success.jsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\nimport { observer } from 'mobx-react';\nimport { useStores } from '../../stores/MainStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alert = /*#__PURE__*/React.forwardRef(_c = function Alert(props, ref) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    ref: ref,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Alert;\nconst Success = observer(_c3 = _s(() => {\n  _s();\n  const {\n    ConfigStore\n  } = useStores();\n  const handleClose = reason => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    ConfigStore.setIsShowSnack(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: 2,\n    sx: {\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"right\"\n      },\n      open: ConfigStore.isShowSnack,\n      autoHideDuration: 3000,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleClose,\n        severity: ConfigStore.snackSeverity,\n        sx: {\n          width: '100%'\n        },\n        children: ConfigStore.snackText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}, \"QO/8HXVy/j7vjbzXo2ugJ+DO1Yw=\", false, function () {\n  return [useStores];\n}));\n_c4 = Success;\nexport default Success;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Alert$React.forwardRef\");\n$RefreshReg$(_c2, \"Alert\");\n$RefreshReg$(_c3, \"Success$observer\");\n$RefreshReg$(_c4, \"Success\");","map":{"version":3,"names":["React","Stack","Button","Snackbar","MuiAlert","observer","useStores","jsxDEV","_jsxDEV","Alert","forwardRef","_c","props","ref","elevation","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c2","Success","_c3","_s","ConfigStore","handleClose","reason","setIsShowSnack","spacing","sx","width","children","anchorOrigin","vertical","horizontal","open","isShowSnack","autoHideDuration","onClose","severity","snackSeverity","snackText","_c4","$RefreshReg$"],"sources":["/Users/nazardosmukhambetov/Desktop/MAIN-PROJECT-GIGAGRAM-main/src/pages/partial/Success.jsx"],"sourcesContent":["import * as React from 'react';\nimport Stack      from '@mui/material/Stack';\nimport Button     from '@mui/material/Button';\nimport Snackbar   from '@mui/material/Snackbar';\nimport MuiAlert   from '@mui/material/Alert';\nimport { observer } from 'mobx-react';\nimport { useStores } from '../../stores/MainStore';\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nconst Success = observer(() => {\n\n  const { ConfigStore } = useStores();\n\n  const handleClose = (reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    ConfigStore.setIsShowSnack(false);\n  };\n\n  return (\n    <Stack spacing={2} sx={{ width: '100%' }}>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\"\n        }}\n        open={ConfigStore.isShowSnack}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity={ConfigStore.snackSeverity} sx={{ width: '100%' }}>\n          {ConfigStore.snackText}\n        </Alert>\n      </Snackbar>\n    </Stack>\n  );\n});\n\nexport default Success;"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,KAAK,MAAW,qBAAqB;AAC5C,OAAOC,MAAM,MAAU,sBAAsB;AAC7C,OAAOC,QAAQ,MAAQ,wBAAwB;AAC/C,OAAOC,QAAQ,MAAQ,qBAAqB;AAC5C,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,SAAS,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,KAAK,gBAAGT,KAAK,CAACU,UAAU,CAAAC,EAAA,GAAC,SAASF,KAAKA,CAACG,KAAK,EAAEC,GAAG,EAAE;EACxD,oBAAOL,OAAA,CAACJ,QAAQ;IAACU,SAAS,EAAE,CAAE;IAACD,GAAG,EAAEA,GAAI;IAACE,OAAO,EAAC,QAAQ;IAAA,GAAKH;EAAK;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AACzE,CAAC,CAAC;AAACC,GAAA,GAFGX,KAAK;AAIX,MAAMY,OAAO,GAAGhB,QAAQ,CAAAiB,GAAA,GAAAC,EAAA,CAAC,MAAM;EAAAA,EAAA;EAE7B,MAAM;IAAEC;EAAY,CAAC,GAAGlB,SAAS,CAAC,CAAC;EAEnC,MAAMmB,WAAW,GAAIC,MAAM,IAAK;IAC9B,IAAIA,MAAM,KAAK,WAAW,EAAE;MAC1B;IACF;IACAF,WAAW,CAACG,cAAc,CAAC,KAAK,CAAC;EACnC,CAAC;EAED,oBACEnB,OAAA,CAACP,KAAK;IAAC2B,OAAO,EAAE,CAAE;IAACC,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,eACvCvB,OAAA,CAACL,QAAQ;MACP6B,YAAY,EAAE;QACZC,QAAQ,EAAE,QAAQ;QAClBC,UAAU,EAAE;MACd,CAAE;MACFC,IAAI,EAAEX,WAAW,CAACY,WAAY;MAC9BC,gBAAgB,EAAE,IAAK;MACvBC,OAAO,EAAEb,WAAY;MAAAM,QAAA,eAErBvB,OAAA,CAACC,KAAK;QAAC6B,OAAO,EAAEb,WAAY;QAACc,QAAQ,EAAEf,WAAW,CAACgB,aAAc;QAACX,EAAE,EAAE;UAAEC,KAAK,EAAE;QAAO,CAAE;QAAAC,QAAA,EACrFP,WAAW,CAACiB;MAAS;QAAAzB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEZ,CAAC;EAAA,QA1ByBb,SAAS;AAAA,EA0BlC,CAAC;AAACoC,GAAA,GA5BGrB,OAAO;AA8Bb,eAAeA,OAAO;AAAC,IAAAV,EAAA,EAAAS,GAAA,EAAAE,GAAA,EAAAoB,GAAA;AAAAC,YAAA,CAAAhC,EAAA;AAAAgC,YAAA,CAAAvB,GAAA;AAAAuB,YAAA,CAAArB,GAAA;AAAAqB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module"}