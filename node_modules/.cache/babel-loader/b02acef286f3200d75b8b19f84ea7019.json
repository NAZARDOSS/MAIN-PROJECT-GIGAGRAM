{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nexport default class RequestsStore {\n  constructor(MainStore) {\n    this.requestTypes = {\n      post: 'POST',\n      get: 'GET',\n      put: 'PUT',\n      delete: 'DELETE'\n    };\n    makeAutoObservable(this);\n    this.MainStore = MainStore;\n  }\n  headers() {\n    return {\n      \"Content-type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"x-access-token\": localStorage.getItem(\"token\") || \"\"\n    };\n  }\n  doPost(url, data) {\n    this.url = url;\n    this.data = data;\n    return fetch(this.url, {\n      method: this.requestTypes.post,\n      headers: this.headers(),\n      body: JSON.stringify(this.data)\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        return response.statusText;\n      }\n    }).then(response => {\n      return response;\n    });\n  }\n  doGet(url) {\n    this.url = url;\n    return fetch(this.url, {\n      method: this.requestTypes.get,\n      headers: this.headers()\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        return response.statusText;\n      }\n    }).then(response => {\n      return response;\n    });\n  }\n  doPut(url, data) {\n    this.url = url;\n    this.data = data;\n    return fetch(this.url, {\n      method: this.requestTypes.put,\n      headers: this.headers(),\n      body: JSON.stringify(this.data)\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        return response;\n      }\n    });\n  }\n  doDelete(url) {\n    this.url = url;\n    return fetch(this.url, {\n      method: this.requestTypes.delete,\n      headers: this.headers()\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        return response.statusText;\n      }\n    }).then(response => {\n      return response;\n    });\n  }\n}","map":{"version":3,"names":["makeAutoObservable","RequestsStore","constructor","MainStore","requestTypes","post","get","put","delete","headers","localStorage","getItem","doPost","url","data","fetch","method","body","JSON","stringify","then","response","ok","json","statusText","doGet","doPut","doDelete"],"sources":["/Users/nazardosmukhambetov/Desktop/GIT/GIGA/src/stores/RequestsStore.js"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\n\nexport default class RequestsStore {\n    requestTypes = {\n        post: 'POST',\n        get: 'GET',\n        put: 'PUT',\n        delete: 'DELETE'\n    };\n\n    constructor(MainStore) {\n        makeAutoObservable(this);\n        this.MainStore = MainStore;\n    };\n    \n    headers() {\n        return {\n            \"Content-type\": \"application/json\",\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"x-access-token\": localStorage.getItem(\"token\") || \"\"\n        }\n    };\n\n    doPost(url, data) {\n        this.url = url;\n        this.data = data;\n        return fetch(this.url, {\n            method: this.requestTypes.post,\n            headers: this.headers(),\n            body: JSON.stringify(this.data)\n        })\n        .then((response) => {\n            if(response.ok) {\n                return response.json();\n            } else {\n                return response.statusText;\n            }\n        })\n        .then((response) => {\n            return response;\n        })\n    };\n\n    doGet(url) {\n        this.url = url;\n        return fetch(this.url, {\n            method: this.requestTypes.get,\n            headers: this.headers()\n        })\n        .then((response) => {\n            if(response.ok) {\n                return response.json();\n            } else {\n                return response.statusText;\n            }\n        })\n        .then((response) => {\n            return response;\n        })\n    };\n\n    doPut(url, data) {\n        this.url = url;\n        this.data = data;\n        return fetch(this.url, {\n            method: this.requestTypes.put,\n            headers: this.headers(),\n            body: JSON.stringify(this.data)\n        })\n        .then((response) => {\n            if(response.ok) {\n                return response.json();\n            } else {\n                return response;\n            }\n        })\n    };\n\n    doDelete(url) {\n        this.url = url;\n        return fetch(this.url, {\n            method: this.requestTypes.delete,\n            headers: this.headers()\n        })\n        .then((response) => {\n            if(response.ok) {\n                return response.json();\n            } else {\n                return response.statusText;\n            }\n        })\n        .then((response) => {\n            return response;\n        })\n    };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}